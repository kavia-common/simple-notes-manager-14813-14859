{"is_source_file": true, "format": "C#", "description": "Implementation of an in-memory notes repository for demo purposes, providing methods for adding, deleting, retrieving, and updating note objects.", "external_files": [], "external_methods": [], "published": ["NotesBackend.Repositories.InMemoryNoteRepository"], "classes": [{"name": "InMemoryNoteRepository", "description": "A simple in-memory repository for managing notes, implementing the INoteRepository interface."}], "methods": [{"name": "Add", "description": "Adds a new note to the collection and returns the added note."}, {"name": "Delete", "description": "Deletes a note matching the userId and noteId; returns true if successful."}, {"name": "GetById", "description": "Retrieves a note by its ID and user ID, returning null if not found."}, {"name": "GetByUser", "description": "Retrieves all notes for a specific user, ordered by updated time descending."}, {"name": "Update", "description": "Updates an existing note; returns true if successful."}], "calls": ["System.Collections.Generic.List<Note>.Add", "Enumerable.FirstOrDefault", "Enumerable.Where", "Enumerable.OrderByDescending", "System.DateTime.UtcNow"], "search-terms": ["InMemoryNoteRepository", "Note repository", "NotesBackend", "InMemory", "repository pattern", "notes management"], "state": 2, "file_id": 13, "knowledge_revision": 30, "git_revision": "", "hash": "554c4869b960c6673f9dbb43f2dd06b5", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/Repositories/InMemoryNoteRepository.cs", "revision_history": [{"30": ""}]}